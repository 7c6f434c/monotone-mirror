#!/usr/bin/make -f
# -*- makefile -*-
#
# debian/rules for monotone, by Richard Levitte
# based on the dh7 template provided by dh_make(1)

# put this up top so it's the default rule.
#
# Policy (section 4.9) says that build should depend on build-indep.
# However, this is only a "should", and it doesn't work, because
# dpkg-buildpackage uses build even in -B mode.  Thus, if build
# depends on build-indep, even a -B build will try to generate the
# manuals -- and the buildds will do this having installed only the
# Build-Depends, for they are ignorant of B-D-I.  All die, O the
# embarrassment.  (This has been a festering known problem for 
# nearly a *decade*, with no forward progress since 2007.  See bugs
# #218893 and #229357.)
#
# Conversely, not having build depend on build-indep means that if you
# do a normal dpkg-buildpackage, the manual gets generated in the
# binary-indep phase rather than the build phase, which works fine (as
# long as you are being sensible and using fakeroot, anyway; I haven't
# tried it with actual root privileges and don't propose to).
#
# Note that we don't want the 'build' and 'binary' targets themselves
# to do anything, and instead only rely on the dependencies doing the
# actual work.  Therefore, we need to give them a no-op, or the target
# will be caught by the % target just below. 
build: build-arch
	@:
binary: binary-indep binary-arch
	@:

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

%:
	dh $@ --parallel --with=bash_completion

# To enable documentation to only be built for the monotone-doc
# package (really, any -indep target), we need to make sure all
# relevant dh_auto_* calls behave differently for arch and indep
# calls.
override_dh_auto_build:
	LANG=POSIX dh_auto_build -pmonotone-doc -- info pdf html
	LANG=POSIX dh_auto_build --remaining-packages -- INFO_DEPS=''

# Thanks to buildd configuration decisions that no one will explain to
# me in sufficient detail to detect reliably, we have to disable all
# netsync tests until upstream gets around to converting them to local
# network sockets.
export DISABLE_NETWORK_TESTS = 1

# This is a hack to get more detail out of the alpha and sparc testsuite
# crashes.
export MTN_STACKTRACE_ON_CRASH = 1

override_dh_auto_test:
	dh_auto_test -pmonotone -- INFO_DEPS='' || \
	    sh extra/building/dump-test-logs.sh

override_dh_auto_install:
	dh_auto_install -Nmonotone-doc -- INFO_DEPS=''
	dh_auto_install -pmonotone-doc

	# monotone-server uses these
	mkdir -p debian/tmp/usr/share/monotone
	for x in read-permissions write-permissions server-setup/serverrc; do \
		cp -p examples/$$x debian/tmp/usr/share/monotone/$${x##*/}.base; \
	done

override_dh_install:
	dh_install --sourcedir=debian/tmp

# Finally, there are a few overrides needed for the install phase.

# Upstream file "ChangeLog" is not actually a change log
override_dh_installchangelogs:
	dh_installchangelogs -X ChangeLog

# colorize seems to compress to something weird, Lintian keeps warning about it
override_dh_compress:
	dh_compress -Xcolorize

# The upstream makefiles' install targets do nothing useful for these
# packages.  (In particular, we do not want the monolithic
# monotone.html installed.)  Annoyingly, at present we cannot simply
# dh_installdocs the entire html directory, because it contains a
# bunch of unwanted junk; instead we dh_installdirs the directory
# hierarchy that is required and use cp -p to put all the files in
# place.  (Using globs in monotone-doc.docs would get everything dumped
# directly into /usr/share/doc/monotone, which doesn't work.)
override_dh_installdocs:
	dh_installdocs --link-doc=monotone

# Install init for monotone-server, but with the name monotone
override_dh_installinit:
	dh_installinit --name=monotone
# we should have logrotate support for monotone-server, but currently we don't
#override_dh_installlogrotate:
#	dh_installlogrotate --name=monotone
