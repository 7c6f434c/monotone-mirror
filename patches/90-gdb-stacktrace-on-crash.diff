Add a hack to the fatal signal handlers to invoke gdb and get a full stack
trace on crash.  This won't fix anything, but by activating this mode
in the testsuite, we can get more detail on the alpha and sparc FTBFSes.
============================================================
--- monotone-0.43.orig/unix/main.cc
+++ monotone-0.43.orig/unix/main.cc
@@ -36,12 +36,18 @@
 
 #include "base.hh"
 #include <signal.h>
+#include <stdlib.h>
+#include <string.h>
 #include <time.h>
-#include <string.h>
+#include <unistd.h>
 #include <sys/resource.h>
-#include <unistd.h>
+#include "lexical_cast.hh"
 
+using std::string;
+using boost::lexical_cast;
+
 static char const * argv0;
+static char const * gdb_cmdline;
 
 // a convenient wrapper
 inline void
@@ -68,13 +74,18 @@ bug_signal(int signo)
 static void
 bug_signal(int signo)
 {
-  write_str_to_stderr(argv0);
-  write_str_to_stderr(": fatal signal: ");
-  write_str_to_stderr(strsignal(signo));
-  bug_report_message();
-  write_str_to_stderr("do not send a core dump, but if you have one, "
-                      "\nplease preserve it in case we ask you for "
-                      "information from it.\n");
+  if (gdb_cmdline)
+    system(gdb_cmdline);
+  else
+    {
+      write_str_to_stderr(argv0);
+      write_str_to_stderr(": fatal signal: ");
+      write_str_to_stderr(strsignal(signo));
+      bug_report_message();
+      write_str_to_stderr("do not send a core dump, but if you have one, "
+                          "\nplease preserve it in case we ask you for "
+                          "information from it.\n");
+    }
 
   raise(signo);
   // The signal has been reset to the default handler by SA_RESETHAND
@@ -129,6 +140,24 @@ main(int argc, char ** argv)
 
   argv0 = argv[0];
 
+  char *ev = getenv("MTN_STACKTRACE_ON_CRASH");
+  string gdb_cmd;
+  if (ev && ev[0])
+    {
+      // Allocate this now so we don't have to do it from inside a signal
+      // handler.  Its scope is this function, so it's live as long as
+      // needed.
+      gdb_cmd = ("gdb -batch -silent -ex 'set pagination off' -ex 'bt' "
+                 "-ex 'frame 4' -ex 'info registers' "
+                 "-ex 'disas $pc $pc+1' -- '");
+      gdb_cmd += argv0;
+      gdb_cmd += "' ";
+      gdb_cmd += lexical_cast<string>(getpid());
+
+      gdb_cmdline = gdb_cmd.c_str();
+    }
+    
+
   bug_signal_action.sa_flags   = SA_RESETHAND;
   bug_signal_action.sa_handler = &bug_signal;
   sigemptyset(&bug_signal_action.sa_mask);
