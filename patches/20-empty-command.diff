Description: Prevent remote crashing of certain montone server configurations
  Monotone versions 0.46, 0.47 and 0.48 are affected by a bug whereby a client
  sending an empty command string to the server can cause it to terminate if
  remote command execution is enabled. This was fixed in 0.48.1.
Bug-Debian: http://bugs.debian.org/601850
Origin: upstream, commit: 2cc01e1baf1032ccf40053bd9910b12d7b87cce6, 
  commit: c6d7e5ab7f497d2cbef5f91e6880028a67d1f8e2
Index: monotone-0.48/commands.cc
===================================================================
--- monotone-0.48.orig/commands.cc	2010-10-30 12:00:32.906613057 +0100
+++ monotone-0.48/commands.cc	2010-10-30 12:00:33.168601416 +0100
@@ -302,8 +302,6 @@
   {
     map< command_id, command * > matches;
 
-    I(!prefix().empty());
-
     for (children_set::const_iterator iter = children().begin();
          iter != children().end(); iter++)
       {
@@ -426,8 +424,10 @@
   complete_command(args_vector const & args)
   {
     // Handle categories early; no completion allowed.
-    if (CMD_REF(__root__)->find_command(make_command_id(args[0]())) != NULL)
-      return make_command_id(args[0]());
+    command_id first_cmd_part = make_command_id(args[0]());
+    if (!first_cmd_part.empty() &&
+         CMD_REF(__root__)->find_command(first_cmd_part) != NULL)
+      return first_cmd_part;
 
     command_id id;
     for (args_vector::const_iterator iter = args.begin();
Index: monotone-0.48/tests/empty_command_name/__driver__.lua
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ monotone-0.48/tests/empty_command_name/__driver__.lua	2010-10-30 12:00:33.169601371 +0100
@@ -0,0 +1,7 @@
+mtn_setup()
+
+check(mtn(''), 1, false, true)
+check(qgrep("is ambiguous", "stderr"))
+
+check(mtn('ls', ''), 1, false, true)
+check(qgrep("is ambiguous", "stderr"))
