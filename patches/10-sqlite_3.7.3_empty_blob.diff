From upstream changelog for revision 97939c9677047b36beef031cce4c1896849a987c:
  sqlite3_column_blob() returns null for both empty blobs and real nulls.
  Check the actual datatype first, and don't rely on a non-null return.
  This only matters for recent SQLite, noted in bug 96.

See also http://code.monotone.ca/p/monotone/issues/96/.
Index: monotone-0.48.1/database.cc
===================================================================
--- monotone-0.48.1.orig/database.cc	2010-10-26 17:09:59.401570755 +0100
+++ monotone-0.48.1/database.cc	2010-10-26 17:10:14.563939979 +0100
@@ -1489,12 +1489,19 @@
       vector<string> row;
       for (int col = 0; col < ncol; col++)
         {
+          // We never store NULLs, so we should never see one.
+          int const datatype = sqlite3_column_type(i->second.stmt(), col);
+          E(datatype != SQLITE_NULL, origin::database,
+            F("null result in query: %s") % query.sql_cmd);
           const char * value = (const char*)sqlite3_column_blob(i->second.stmt(), col);
           int bytes = sqlite3_column_bytes(i->second.stmt(), col);
-          E(value, origin::database,
-            F("null result in query: %s") % query.sql_cmd);
-          row.push_back(string(value, value + bytes));
-          //L(FL("row %d col %d value='%s'") % nrow % col % value);
+          if (value) {
+            row.push_back(string(value, value + bytes));
+          } else {
+            // sqlite3_column_blob() returns null for zero-length
+            I(bytes == 0);
+            row.push_back(string());
+          }
         }
       res.push_back(row);
     }
